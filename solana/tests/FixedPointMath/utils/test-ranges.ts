const MAX_U256 = 2n**256n-1n;

export const TEST_VALUES: bigint[] = [
    0n,
    1n,
    92089237316n,
    2n ** 64n - 1n,
    2n ** 64n,
    2n ** 64n + 1n,
    2n ** 64n + 3n,
    2n ** 64n + 2n ** 63n,
    2n ** 128n,
    2534813997259999076621003419n,
    1454045151327069624732940006680697n,
    189758302818025875078535158019971419127n,
    253481399725997993139041691276621003419n,
    18500868790785326998466564056403945758400791n,
    373161954235709850086879078532699846656405640394575840n,
    771477412680725324763760678464103820314961999625872037132546469973n,
    443125875175624101276442833568633488440005336375630638824655269915873995n,
    100969888925816214328740005251358823568110556039483917879850516150659400505184n,
    MAX_U256
]

export const SMALL_TEST_VALUES: bigint[] = [
    0n,
    1n,
    2n ** 64n,
    2n ** 64n - 1n,
    2n ** 64n + 2n ** 13n,
    92089237316n,
    25348139907621003419n,
    1454045062473294000697n,
    1897583028153511419127n,
    2534813997259904003419n,
    1850086879078505840791n,
    37316195423570985375840n,
    714961999625872037132546469973n,
    443125875175348840638824655269915873995n,
    100969888925816214328823568110556039483917879850516150659400505184n,
    MAX_U256
]


export function generate_tuples(a: bigint[], b: bigint[]): bigint[] {
    let output = [];
    for (let a_el of a) {
        for (let b_el of b) {
            output.push([a_el, b_el])
        }
    }

    return output;
}
